// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkUserId String    @unique
  name        String
  email       String    @unique
  projects    Project[]
}

model Project {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @unique
  user       User?    @relation(fields: [userId], references: [clerkUserId])
  idea       String
  title      String
  summary    String
  createdAt  DateTime @default(now())
  backend    Backend  @relation(fields: [backendId], references: [id])
  backendId  String   @unique @db.ObjectId
  frontend   Frontend @relation(fields: [frontendId], references: [id])
  frontendId String   @unique @db.ObjectId
}

model Backend {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  databaseId  String     @unique @db.ObjectId
  database    Database?  @relation(fields: [databaseId], references: [id])
  frameworkId String?    @unique @db.ObjectId
  framework   Framework?
  todoList    TodoList[]
  Project     Project?
}

model Frontend {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  colorScheme   ColorScheme @relation(fields: [colorSchemeId], references: [id])
  frameworkId   String?     @unique @db.ObjectId
  framework     Framework?
  colorSchemeId String      @unique @db.ObjectId
  todoList      TodoList[]
  Project       Project?
}

model TodoList {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  done       Boolean
  backend    Backend?  @relation(fields: [backendId], references: [id])
  backendId  String?   @db.ObjectId
  frontend   Frontend? @relation(fields: [frontendId], references: [id])
  frontendId String?   @db.ObjectId
  createdAt  DateTime  @default(now())
}

model Framework {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  whyGoodOption String
  description   String
  link          String
  backend       Backend?  @relation(fields: [backendId], references: [id])
  backendId     String?   @unique @db.ObjectId
  frontend      Frontend? @relation(fields: [frontendId], references: [id])
  frontendId    String?   @unique @db.ObjectId
}

model ColorScheme {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  whyGoodOption  String
  colorPalette   ColorPalette @relation(fields: [colorPaletteId], references: [id])
  colorPaletteId String       @unique @db.ObjectId
  Frontend       Frontend?
}

model ColorPalette {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  color       Color[]
  ColorScheme ColorScheme?
}

model Color {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  hex            String
  rgb            String
  ColorPalette   ColorPalette @relation(fields: [colorPaletteId], references: [id])
  colorPaletteId String       @db.ObjectId
}

model Database {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  whyGoodOption String
  description   String
  link          String
  schema        String
  Backend       Backend?
}
